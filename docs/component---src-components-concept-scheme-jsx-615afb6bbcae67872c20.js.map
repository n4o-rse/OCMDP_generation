{"version":3,"file":"component---src-components-concept-scheme-jsx-615afb6bbcae67872c20.js","mappings":"wNAiDA,UAxCsBA,IAEf,IADLC,aAAeC,KAAMC,EAAa,MAAEC,EAAK,aAAEC,IAC5CL,EACC,MAAM,KAAEM,IAASC,EAAAA,EAAAA,MACX,EAACC,EAAS,EAACC,IAAeC,EAAAA,EAAAA,UAAS,KACzCC,EAAAA,EAAAA,WAAU,KACRF,EAAYH,EAAKM,mBAChB,CAACN,aAAI,EAAJA,EAAMM,mBAEV,MAAMC,GAAWC,EAAAA,EAAAA,eACXC,GACJZ,aAAa,EAAbA,EAAeY,eAAeZ,aAAa,EAAbA,EAAea,gBACzCC,GACJd,aAAa,EAAbA,EAAec,SAASd,aAAa,EAAbA,EAAee,YAAYf,aAAa,EAAbA,EAAegB,WAEpE,GAAIN,EAASO,KAAM,CACjB,MAAMC,EAAWjB,EAAMkB,KAAMC,GAAMA,EAAEC,KAAKC,GAAGC,SAASb,EAASO,OAC/D,OACEO,EAAAA,EAAAA,GAAA,OAAKF,IAAIG,EAAAA,EAAAA,UAASzB,EAAcsB,MAC9BE,EAAAA,EAAAA,GAACE,EAAAA,QAAO,CAAC5B,YAAa,CAAEC,KAAMmB,EAASG,KAAMhB,cAGnD,CACE,OACEmB,EAAAA,EAAAA,GAAA,OAAKF,IAAIG,EAAAA,EAAAA,UAASzB,EAAcsB,MAC9BE,EAAAA,EAAAA,GAAA,YACEA,EAAAA,EAAAA,GAAA,UAAKV,IAASa,EAAAA,EAAAA,MAAKtB,EAALsB,CAAeb,KAC7BU,EAAAA,EAAAA,GAACI,EAAAA,EAAU,CAACN,GAAItB,EAAcsB,MAC9BE,EAAAA,EAAAA,GAACK,EAAAA,EAAQ,CAACC,IAAIC,EAAAA,EAAAA,aAAY/B,EAAcsB,GAAI,OAAQpB,KACnDU,IACCY,EAAAA,EAAAA,GAAA,OAAKQ,UAAU,aACbR,EAAAA,EAAAA,GAACS,EAAAA,GAAQ,MAAEN,EAAAA,EAAAA,MAAKtB,EAALsB,CAAef,O","sources":["webpack://skohub-vocabs/./src/components/ConceptScheme.jsx"],"sourcesContent":["import Markdown from \"markdown-to-jsx\"\r\nimport Concept from \"./Concept\"\r\nimport { i18n, getDomId, getFilePath } from \"../common\"\r\nimport JsonLink from \"./JsonLink\"\r\nimport ConceptURI from \"./ConceptURI\"\r\nimport { useSkoHubContext } from \"../context/Context\"\r\nimport { useEffect, useState } from \"react\"\r\nimport { useLocation } from \"@gatsbyjs/reach-router\"\r\n\r\nconst ConceptScheme = ({\r\n  pageContext: { node: conceptScheme, embed, customDomain },\r\n}) => {\r\n  const { data } = useSkoHubContext()\r\n  const [language, setLanguage] = useState(\"\")\r\n  useEffect(() => {\r\n    setLanguage(data.selectedLanguage)\r\n  }, [data?.selectedLanguage])\r\n\r\n  const pathname = useLocation()\r\n  const description =\r\n    conceptScheme?.description || conceptScheme?.dc_description\r\n  const title =\r\n    conceptScheme?.title || conceptScheme?.dc_title || conceptScheme?.prefLabel\r\n  // got some hash uri to show\r\n  if (pathname.hash) {\r\n    const filtered = embed.find((c) => c.json.id.endsWith(pathname.hash))\r\n    return (\r\n      <div id={getDomId(conceptScheme.id)}>\r\n        <Concept pageContext={{ node: filtered.json, language }} />\r\n      </div>\r\n    )\r\n  } else {\r\n    return (\r\n      <div id={getDomId(conceptScheme.id)}>\r\n        <div>\r\n          <h1>{title && i18n(language)(title)}</h1>\r\n          <ConceptURI id={conceptScheme.id} />\r\n          <JsonLink to={getFilePath(conceptScheme.id, \"json\", customDomain)} />\r\n          {description && (\r\n            <div className=\"markdown\">\r\n              <Markdown>{i18n(language)(description)}</Markdown>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConceptScheme\r\n"],"names":["_ref","pageContext","node","conceptScheme","embed","customDomain","data","useSkoHubContext","language","setLanguage","useState","useEffect","selectedLanguage","pathname","useLocation","description","dc_description","title","dc_title","prefLabel","hash","filtered","find","c","json","id","endsWith","___EmotionJSX","getDomId","Concept","i18n","ConceptURI","JsonLink","to","getFilePath","className","Markdown"],"sourceRoot":""}